UNISTD.ref

typedef int uid_t
typedef int gid_t
typedef int pid_t
typedef int off_t
typedef int size_t
typedef int ssize_t
typedef int useconds_t
typedef int intptr_t

int access(char*, int)
unsigned int alarm(unsigned int)
int chdir(char*);
int chroot(char*);
int chown(char*, uid_t, gid_t);
int close(int);
size_t confstr(int, char*, size_t);
char *ctermid(char*);
int dup(int);
int dup2(int, int);
void _exit(int);
int fchown(int, uid_t, gid_t);
int fchdir(int);
int fdatasync(int);
pid_t fork(void);
long fpathconf(int, int);
int fsync(int);
int ftruncate(int, off_t);
char *getcwd(char*, size_t);
int getdtablesize(void);
gid_t getegid(void);
uid_t geteuid(void);
gid_t getgid(void);
long gethostid(void);
char *getlogin(void);
int getlogin_r(char*, size_t);
int getpagesize(void);
char *getpass(char*);
pid_t getpgrp(void);
pid_t getpid(void);
pid_t getppid(void);
uid_t getuid(void);
char *getwd(char*);
int isatty(int);
int lchown(char*, uid_t, gid_t);
int link(char*, char *);
int lockf(int, int, off_t);
off_t lseek(int, off_t, int);
int nice(int);
long pathconf(char*, int);
int pause(void);
ssize_t read(int, void*, size_t);
int readlink(char*, char*, size_t);
int rmdir(char*);
void *sbrk(intptr_t);
int setgid(gid_t);
int setpgid(pid_t, pid_t);
pid_t setpgrp(void);
int setregid(gid_t, gid_t);
int setreuid(uid_t, uid_t);
pid_t setsid(void);
int setuid(uid_t);
unsigned int sleep(unsigned int);
int symlink(char*, char *);
void sync(void);
long sysconf(int);
pid_t tcgetpgrp(int);
int tcsetpgrp(int, pid_t);
int truncate(char*, off_t);
char *ttyname(int);
int ttyname_r(int, char*, size_t);
useconds_t ualarm(useconds_t, useconds_t);
int unlink(char*);
int usleep(useconds_t);
pid_t vfork(void);
ssize_t write(int, void*, size_t);


